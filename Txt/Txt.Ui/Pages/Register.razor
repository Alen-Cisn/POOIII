@page "/register"
@layout EmptyLayout

@attribute [AllowAnonymous]

@using Txt.Ui.Models
@using Txt.Ui.Services.Interfaces

@inject IAuthService authService

<PageTitle>Register</PageTitle>

<h1>Register</h1>

<div class="login-container">
    <p class="status-message" role="status">Please, enter credentials</p>
    <EditForm Model="@registerRequest" OnValidSubmit="@RegisterSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <MudTextField @bind-Value="registerRequest.Email" Label="Email address" InputType="InputType.Email"
                aria-label="User email." For="@(() => registerRequest.Email)" />
        </div>
        <MudTooltip Placement="Placement.Right"
            Text="It should be at least 8 characters length, have an uppercase letter, a lowercase letter, and a digit.">
            <div class="form-group">
                <MudTextField @bind-Value="registerRequest.Password" Label="Password" InputType="InputType.Password"
                    aria-label="User password." For="@(() => registerRequest.Password)" />
            </div>
        </MudTooltip>
        <div class="form-group">
            <MudTextField @bind-Value="registerRequest.PasswordConfirmation" Label="Confirm password"
                InputType="InputType.Password" aria-label="User password confirmation."
                For="@(() => registerRequest.PasswordConfirmation)" />
        </div>
        <div class="d-flex flex-row justify-content-end text-right">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
                Log in
            </MudButton>
            <a href="/login" class="col text-right">Log in</a>
        </div>
    </EditForm>
</div>

@code {
    private RegisterRequest registerRequest = new()
        {
            Email = "",
            Password = "",
            PasswordConfirmation = "",
        };

    private Task RegisterSubmit()
    => authService.RegisterAsync(registerRequest.Email, registerRequest.Password);
}