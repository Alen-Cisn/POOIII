@page "/login"
@layout EmptyLayout

@attribute [AllowAnonymous]

@using Blazored.LocalStorage
@using Txt.Ui.Models
@using Txt.Ui.Services.Interfaces

@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager
@inject IAuthService authService

<PageTitle>Login</PageTitle>

<h1>Login</h1>

<div class="login-container">
    <p class="status-message" role="status">Please, enter credentials</p>
    <EditForm Model="@loginRequest" OnValidSubmit="@LoginSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">

            <MudTextField @bind-Value="loginRequest.Email" Label="Email address" InputType="InputType.Email"
                aria-label="User email." For="@(() => loginRequest.Email)" />
        </div>
        <div class="form-group">
            <MudTextField @bind-Value="loginRequest.Password" Label="Password" InputType="InputType.Password"
                aria-label="User Password." For="@(() => loginRequest.Password)" />
        </div>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
            Log in
        </MudButton>
    </EditForm>
</div>

@code {
    private LoginRequest loginRequest = new()
        {
            Email = "",
            Password = "",
        };

    private Task LoginSubmit()
    => authService.LoginAsync(loginRequest.Email, loginRequest.Password);
}